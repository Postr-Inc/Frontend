"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[703],{8703:function(e,t,r){var s;r.d(t,{h:function(){return a}}),s="function"==typeof atob?atob:function(e){var t=String(e).replace(/=+$/,"");if(t.length%4==1)throw Error("'atob' failed: The string to be decoded is not correctly encoded.");for(var r,s,i,o="",a=0;r=t.charAt(a++);)-1!==(r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(r))&&(s=i%4?64*s+r:r,i++%4&&(o+=String.fromCharCode(255&s>>(-2*i&6))));return o};let i={get:e=>localStorage.getItem(e),set:(e,t)=>localStorage.setItem(e,t),remove:e=>localStorage.removeItem(e),clear:()=>localStorage.clear()};class o{checkConnection(){return this.ws.readyState===WebSocket.OPEN}search(e){return new Promise((t,r)=>{var s;let i=crypto.randomUUID();e.collection||r(Error("collection is required")),this.authStore.isValid||r(Error("token is expired")),this.callbacks.set(i,e=>{e.error?r(Error(JSON.stringify(e))):t(e),this.callbacks.delete(i)});let o="";Object.keys(e.query).forEach((t,r)=>{0===r?o+="".concat(t,'?~"').concat(e.query[t],'"'):o+="&&".concat(t,"?~").concat(e.query[t])}),this.sendMessage(JSON.stringify({type:"search",key:i,token:this.token,data:{collection:e.collection,query:o,cacheKey:e.cacheKey||null,limit:e.limit,offset:e.page,id:(null===(s=this.authStore.model())||void 0===s?void 0:s.id)||null,expand:e.expand||null},session:this.sessionID}))})}getRawFileData(e){return new Promise((t,r)=>{let s=new FileReader;s.onload=()=>{let e=s.result,r=new Uint8Array(e);t(r)},s.onerror=e=>{r(e)},s.readAsArrayBuffer(e)})}changePassword(e){let{currentPassword:t,newPassword:r,confirmedPassword:s}=e}async checkUsername(e){return new Promise((t,r)=>{this.callbacks.set("checkUsername",e=>{e.error&&r(e.error),t(e.message),this.callbacks.delete("checkUsername")}),this.sendMessage(JSON.stringify({type:"checkUsername",key:"checkUsername",data:{username:e},token:this.token,session:this.sessionID}))})}authWithPassword(e,t){return new Promise((r,s)=>{if(e){if(t)this.callbacks.set("auth&password",e=>{e.clientData?(localStorage.setItem("postr_auth",JSON.stringify({model:e.clientData,token:e.clientData.token})),r(e.clientData),this.callbacks.delete("auth&password"),window.dispatchEvent(this.changeEvent)):e.error&&(s(Error(e.error)),this.callbacks.delete("auth&password"))}),this.sendMessage(JSON.stringify({type:"auth&password",data:{emailOrUsername:e,password:t},key:"auth&password"}));else throw Error("password is required")}else throw Error("email or username is required")})}waitForSocketConnection(e){let t=()=>{this.ws.readyState===WebSocket.OPEN?null!=e&&e():this.ws.readyState===WebSocket.CLOSED||this.ws.readyState===WebSocket.CLOSING?(console.error("WebSocket connection closed or failed."),null!=e&&e(Error("WebSocket connection closed or failed."))):setTimeout(t,100)};t(),setTimeout(()=>{this.ws.readyState!==WebSocket.OPEN&&null!=e&&e(Error("WebSocket connection timed out."))},5e3)}getAsByteArray(e){return new Promise((t,r)=>{let s=new FileReader;s.onload=()=>{let e=s.result,r=new Uint8Array(e);t(Array.from(r))},s.onerror=e=>{r(e)},s.readAsArrayBuffer(e)})}oauth(e){return new Promise((t,r)=>{if(e.provider){if(e.redirect_uri){let{provider:s,redirect_uri:i,redirect:o}=e;this.callbacks.set("oauth",e=>{e.url&&window.open(e.url),e.clientData?(localStorage.setItem("postr_auth",JSON.stringify({model:e.clientData.record,token:e.clientData.token})),t(e.clientData),window.dispatchEvent(this.changeEvent)):e.error&&r(Error(e.error))}),this.sendMessage(JSON.stringify({type:"oauth",data:e,session:this.sessionID}))}else throw Error("redirect_uri is required")}else throw Error("provider is required")})}onmessage(e){let t=JSON.parse(e.data);if(this.callbacks.has(t.key))this.callbacks.get(t.key)(t.data?t.data:t);else if("status"===t.type)t.data.forEach(e=>{this.online.set("online",e);{let e=setTimeout(()=>{window.dispatchEvent(this.onlineEvent),clearTimeout(e)},1e3)}});else if("pong"==t.type){let e=Date.now()-t.time;this.online.set("latency",e);{let e=setTimeout(()=>{window.dispatchEvent(this.onlineEvent),clearTimeout(e)},1e3)}}}read(e){return new Promise((t,r)=>{let s=crypto.randomUUID();e.collection||r(Error("collection is required")),this.authStore.isValid||r(Error("token is expired")),this.callbacks.set(s,e=>{e.error?r(e):t(e),this.callbacks.delete(s)}),this.sendMessage(JSON.stringify({type:"read",key:s,collection:e.collection,token:JSON.parse(i.get("postr_auth")||"{}").token,cacheKey:e.cacheKey||null,id:e.id,returnable:e.returnable,expand:e.expand,session:this.sessionID,authKey:e.authKey||null}))})}update(e){return new Promise((t,r)=>{let s=crypto.randomUUID();e.collection||r(Error("collection is required")),e.record||r(Error("data is required")),this.authStore.isValid||r(Error("token is expired")),this.callbacks.set(s,e=>{e.error&&r(e),t(e),this.callbacks.delete(s)}),this.sendMessage(JSON.stringify({type:"update",key:s,data:e.record,expand:e.expand,collection:e.collection,skipDataUpdate:e.skipDataUpdate||!1,invalidateCache:e.invalidateCache||null,immediatelyUpdate:e.immediatelyUpdate||!1,sort:e.sort,filter:e.filter,token:JSON.parse(i.get("postr_auth")||"{}").token,id:e.id,session:this.sessionID,cacheKey:e.cacheKey||null}))})}list(e){return new Promise((t,r)=>{var s;let o=crypto.randomUUID();this.currType="list",e.collection||r(Error("collection is required")),this.authStore.isValid||r(Error("token is expired")),this.callbacks.set(o,e=>{e.error?r(e):t(e),this.callbacks.delete(o)}),this.sendMessage(JSON.stringify({type:"list",key:o,token:JSON.parse(i.get("postr_auth")||"{}").token,data:{returnable:e.returnable||null,collection:e.collection,sort:e.sort,filter:e.filter,cacheTime:e.cacheTime||null,refresh:e.refresh||!1,refreshEvery:e.refreshEvery||0,limit:e.limit,offset:e.page,id:(null===(s=this.authStore.model())||void 0===s?void 0:s.id)||null,expand:e.expand||null,cacheKey:e.cacheKey},session:this.sessionID}))})}delete(e){return new Promise((t,r)=>{let s=crypto.randomUUID();e.collection||r(Error("collection is required")),this.authStore.isValid||r(Error("token is expired")),this.callbacks.set(s,e=>{e.error&&r(e),t(e)}),this.sendMessage(JSON.stringify({type:"delete",key:s,collection:e.collection,ownership:this.authStore.model().id,filter:e.filter,token:this.token,id:e.id||null,session:this.sessionID,cacheKey:e.cacheKey||null}))})}create(e){return new Promise((t,r)=>{let s=crypto.randomUUID();e.collection||r(Error("collection is required")),e.record||r(Error("record is required")),"users"===e.collection||this.authStore.isValid||r(Error("token is expired")),this.callbacks.set(s,e=>{e.error&&r(Error(e)),t(e)}),this.sendMessage(JSON.stringify({method:"create",type:"create",key:s,expand:e.expand,record:e.record,collection:e.collection,token:this.token||null,id:this.authStore.model().id||null,session:this.sessionID,cacheKey:e.cacheKey||null}))})}on(e,t){let r=crypto.randomUUID();if(!event)throw Error("event is required");if(e.collection||Error("collection is required"),t&&"function"!=typeof t||Error("callback is required"),!e.id)throw Error("id is required");return this.callbacks.set(r,e=>{if(e.error)throw Error(e.error);t(e)}),this.sendMessage(JSON.stringify({type:"subscribe",key:r,eventType:e.event,collection:e.collection,id:e.id,token:this.token})),{unsubscribe:()=>{this.callbacks.delete(r)}}}close(){this.ws.close()}constructor(e){this.cdn={url:e=>"".concat(this.pbUrl,"/api/files/").concat(e.collection,"/").concat(e.id,"/").concat(e.file),getFile:e=>new Promise((t,r)=>{let s=crypto.randomUUID();e.collection||r(Error("collection is required")),e.recordId||r(Error("recordId is required")),e.field||r(Error("field is required")),this.callbacks.set(s,e=>{e.error&&r(e.error);let s=new Blob([new Uint8Array(e.file)],{type:e.type}),i=new File([s],e.fileName,{type:e.fileType}),o=new FileReader;o.onload=()=>{t(o.result)},o.readAsDataURL(i)}),this.sendMessage(JSON.stringify({type:"fetchFile",key:s,collection:e.collection,field:e.field,recordID:e.recordId,token:this.token,session:this.sessionID}))})},this.cacehStore={set:(e,t,r)=>{if(r){let s={value:t,cacheTime:r,time:new Date().getTime()};this.$memoryCache.set(e,JSON.stringify(s))}else this.$memoryCache.set(e,t)},get:e=>{let t=this.$memoryCache.get(e);return t?t.cacheTime?new Date().getTime()-t.time>t.cacheTime?(this.$memoryCache.delete(e),null):t.value:t:null},delete:e=>{this.$memoryCache.delete(e)},has:e=>this.$memoryCache.has(e),all:()=>this.$memoryCache.entries(),keys:()=>Array.from(this.$memoryCache.keys())},this.authStore={update:()=>{localStorage.getItem("postr_auth")&&(this.callbacks.set("authUpdate",e=>{if(e.error&&e.hasOwnProperty("isValid")&&!e.isValid)this.authStore.clear();else if(e.error)throw Error(e);else e.clientData&&(console.log(e.clientData),localStorage.setItem("postr_auth",JSON.stringify({model:e.clientData,token:this.token})))}),this.sendMessage(JSON.stringify({type:"authUpdate",token:this.token,key:"authUpdate",data:JSON.parse(localStorage.getItem("postr_auth")).model,session:this.sessionID})))},model:()=>JSON.parse(i.get("postr_auth")||"{}").model,onChange:e=>{window.addEventListener("authChange",t=>{let r=t.detail;e(r)})},isValid:()=>{let e=localStorage.getItem("postr_auth")?JSON.parse(i.get("postr_auth")||"{}").token:null;return!!e&&!function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;var r=function(e){if(e)try{var t=decodeURIComponent(s(e.split(".")[1]).split("").map(function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(t)||{}}catch(e){console.error("Error decoding token payload:",e)}return{}}(e).exp;return!!r&&Date.now()>=1e3*r-1e3*t}(e)},img:()=>"".concat(this.pbUrl,"/api/files/users/").concat(this.authStore.model().id,"/").concat(this.authStore.model().avatar),isRatelimited:e=>new Promise((t,r)=>{this.callbacks.set("isRatelimited",e=>{e.error&&r(e.error),t(e),this.callbacks.delete("isRatelimited")}),this.sendMessage(JSON.stringify({type:"isRatelimited",key:"isRatelimited",token:this.token,method:e,session:this.sessionID}))}),clear:()=>{i.remove("postr_auth"),window.dispatchEvent(this.changeEvent)}},this.onlineEvent=new CustomEvent("online"),this.changeEvent=new CustomEvent("change"),this.sessionID=crypto.randomUUID(),this.isStandalone=!1,this.ws=new WebSocket("".concat(e.wsUrl.trim().startsWith("127")||e.wsUrl.trim().startsWith("localhost")?"ws":"wss","://").concat(e.wsUrl)),this.$memoryCache=new Map,window.postr={version:" 1.7.0"},this.token=JSON.parse(i.get("postr_auth")||"{}")?JSON.parse(i.get("postr_auth")||"{}").token:null,this.cancellation=e.cancellation,this.sendMessage=e=>{this.waitForSocketConnection(()=>{this.ws.send(e)})},this.currType="",this.pbUrl=e.pbUrl,this.callbacks=new Map,this.ws.onmessage=e=>this.onmessage(e),this.ws.onopen=()=>{this.ws.send(JSON.stringify({type:"authSession",token:this.token,session:this.sessionID})),setInterval(()=>{this.authStore.isValid()&&this.ws.send(JSON.stringify({type:"ping",token:this.token,session:this.sessionID,time:Date.now()}))},1e3)},this.ws.onclose=()=>{this.ws=new WebSocket("".concat(e.wsUrl.trim().startsWith("127")||e.wsUrl.trim().startsWith("localhost")?"ws":"wss","://").concat(e.wsUrl))},this.online=new Map,this.changeEvent=new CustomEvent("authChange",{detail:{model:JSON.parse(i.get("postr_auth")||"{}").model,token:JSON.parse(i.get("postr_auth")||"{}")?JSON.parse(i.get("postr_auth")||"{}").token:null}}),this.onlineEvent=new CustomEvent("online",{detail:{online:this.online}});let t=setInterval(()=>{this.$memoryCache.forEach((e,r)=>{let s=JSON.parse(e);s.time&&new Date().getTime()-s.time>s.cacheTime&&(this.$memoryCache.delete(r),clearInterval(t))})},1e3),r=setInterval(()=>{this.ws.readyState!==WebSocket.OPEN||clearInterval(r)},1e3)}}let a=new o({wsUrl:"anemic.postr.rf.gd",pbUrl:"https://postrapi.pockethost.io",cancellation:!0})}}]);